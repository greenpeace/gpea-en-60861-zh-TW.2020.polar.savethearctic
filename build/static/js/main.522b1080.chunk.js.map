{"version":3,"sources":["App/main.js","serviceWorker.js"],"names":["window","$","shareFBUrl","anime","autosize","Cookies","Highcharts","dataLayer","donate","open","share","navigator","title","text","url","then","console","log","catch","error","baseURL","encodeURIComponent","EN_PAGE_STATUS","pageJson","pageNumber","this","$container","find","bind","val","addClass","removeClass","click","e","preventDefault","submit","end","currYear","Date","getFullYear","i","option","append","validator","addMethod","value","element","optional","test","prop","addClassRules","validate","errorPlacement","parents","after","submitHandler","form","serialize","invalidHandler","event","errors","numberOfInvalids","show","hide","pageInit","Boolean","location","hostname","match","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.522b1080.chunk.js","sourcesContent":["const {$, anime, autosize, Cookies, Highcharts, dataLayer} = window\n\nconst donateUrl = \"https://act.greenpeace.org/page/4723/donate/1?utm_campaign=2020-dwf&ref=2020-dwf_thankyoupage_donation_btn\";\nconst shareUrl = \"https://act.greenpeace.org/page/60863/petition/1\";\nconst shareFBUrl = \"https://act.greenpeace.org/page/60863/petition/1\";\nconst shareLineUrl = \"https://act.greenpeace.org/page/60863/petition/1\";\n\nwindow.donate = () => {\n\twindow.open(\n        donateUrl,\n        \"_blank\"\n    );\n}\nwindow.share = () => {\n\n\tif (navigator.share) {\n\t\t// we can use web share!\n\t\tnavigator\n\t\t\t.share({\n\t\t\t\ttitle: \"阻止破壞北極 今天立即加入全球行動！\",\n\t\t\t\ttext: \"全賴有您，守護北極的力量日益強大。我們團結一起，讓守護北極的呼聲，揚得更遠！經過三年不懈的努力、超過700萬人揭露SHELL的野心；九月底，石油公司SHELL終於止步北極！現在，讓我們進一步確保所有石油公司永不復返。\",\n\t\t\t\turl: shareUrl\n\t\t\t})\n\t\t\t.then(() => console.log(\"Successfully shared\"))\n\t\t\t.catch(error => console.log(\"Error sharing:\", error));\n\t} else {\n\t\t\n\t\tvar baseURL = \"https://www.facebook.com/sharer/sharer.php\";\n\t\t\n\t\tconsole.log('open', baseURL + \"?u=\" + encodeURIComponent(shareFBUrl))\n\t\twindow.open(\n\t\t\tbaseURL + \"?u=\" + encodeURIComponent(shareFBUrl),\n\t\t\t\"_blank\"\n\t\t);\n\t}\n}\n\nvar pageInit = function(){\n    console.log('init')\n    var _ = this;\n    _.$container = $('#form');\n\n    _.$container.find('input, select').bind('change blur', function(){\n        if($(this).val() !== ''){\n            $(this).addClass('filled');\n        }\n        else{\n            $(this).removeClass('filled');\n        }\n    });\n\n    $('#center_sign-submit').click(function(e){\n        e.preventDefault();\n        $(\"#center_sign-form\").submit();\n        console.log(\"center_sign-form submitting\")\n    }).end()\n\n    // create the year options\n    let currYear = new Date().getFullYear()\n    for (var i = 0; i < 80; i++) {\n        \n        let option = `<option value=\"01/01/${currYear-i}\">${currYear-i}</option>`\n        $(\"#center_yearofbirth\").append(option);\n        $('#en__field_supporter_NOT_TAGGED_6').append(option);\n    }\n\n    $.validator.addMethod( //override email with django email validator regex - fringe cases: \"user@admin.state.in..us\" or \"name@website.a\"\n        'email',\n        function(value, element){\n                return this.optional(element) || /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/i.test(value);\n        },\n        'Email 格式錯誤'\n    );\n\n    $.validator.addMethod(\n        \"taiwan-phone\",\n        function (value, element) {\n            // console.log('do validate')\n            console.log('phone required :', $('#center_phone').prop('required'));\n            if ($('#center_phone').prop('required')) {\n                return this.optional(element) || /^[\\d \\-+]{7,15}$/i.test(value);\n            } else if ($('#center_phone').val()) {\n                return this.optional(element) || /^[\\d \\-+]{7,15}$/i.test(value);\n            }\n            return true\n        },\n        \"電話格式不正確，請只輸入數字 0912345678 或 02-12345678\")\n\n    $.validator.addClassRules({ // connect it to a css class\n        \"taiwan-phone\" : { \"taiwan-phone\" : true }\n    });\n\n    $(\"#center_sign-form\").validate({\n        errorPlacement: function(error, element) {\n            console.log(error)\n            element.parents(\"div.form-field:first\").after( error );\n        },\n        submitHandler: function(form) {\n            // do other things for a valid form\n            // var temp = [];\n\n            // $('#voting .option .vote-btn.checked').each(function(k,v) {\n            //     var id = $(v).data('id');\n            //     temp.push(id);\n            // });\n\n            // Cookies.set('checked_options', temp);\n            // console.log('en__field_supporter_questions_288643', temp.join())\n\n            $('#en__field_supporter_firstName').val($('#center_name').val());\n            $('#en__field_supporter_lastName').val($('#center_lastname').val());\n            $('#en__field_supporter_emailAddress').val($('#center_email').val());\n\n            if (!$('#center_phone').prop('required') && !$('#center_phone').val()) {\n                $('#en__field_supporter_phoneNumber').val('0900000000');\n            } else {\n                $('#en__field_supporter_phoneNumber').val($('#center_phone').val());\n            }\n            $('#en__field_supporter_NOT_TAGGED_6').val($('#center_yearofbirth').val());\n\n            // // handling opinion submit\n            // let message = $('#fake_message').val().trim();\n            // let last_name = $('#fake_supporter_lastName').val();\n            // let email = $('#fake_supporter_emailAddress').val();\n            // console.log(message);\n\n            console.log($(\"form.en__component--page\").serialize());\n            $(\"form.en__component--page\").submit();\n            console.log(\"submit success\")\n\n        },\n        invalidHandler: function(event, validator) {\n            // 'this' refers to the form\n            var errors = validator.numberOfInvalids();\n            if (errors) {\n                // console.log(errors)\n                var message = errors == 1\n                    ? 'You missed 1 field. It has been highlighted'\n                    : 'You missed ' + errors + ' fields. They have been highlighted';\n                $(\"div.error\").show();\n            } else {\n                $(\"div.error\").hide();\n            }\n        }\n    });\n}\n\nconst resolveEnPagePetitionStatus = () => {\n\tlet status = \"FRESH\";\n\t// console.log(window);\n\tif (window.pageJson.pageNumber === 2) {\n\t\tstatus = \"SUCC\"; // succ page\n\t} else {\n\t\tstatus = \"FRESH\"; // start page\n\t}\n\n\treturn status;\n};\n\n$(function(){\n\n    const EN_PAGE_STATUS = resolveEnPagePetitionStatus()\n\tconsole.log(\"EN_PAGE_STATUS\", EN_PAGE_STATUS)\n\tif (EN_PAGE_STATUS===\"FRESH\") {\n\t// if (false) {\n        pageInit();\n        $(\"#page-2\").hide();\n\t\t// if($('#voting').length == 1){\n\t\t\t\n\t\t// }\n\n\t\t// setTimeout(function(){\n\t\t// \tscrollTo(0,0);\n\t\t// \tif($('#intro').length == 1) introPage.init();\n\t\t// }, 400);\n\n\t\t// $(window).resize(function(){\n\t\t// \tif(introPage.active) introPage.resize();\n\t\t// });\n\t} else if (EN_PAGE_STATUS===\"SUCC\") {\n\t// } else if (true) {\n\t\t// pageHandler.goTo('#result', '#intro');\n        // resultPage.init();\n        $('#page-1').hide();\n        $('#page-2').show();\n        console.log(\"go to thank you page\")\n\t}\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}